import os
import re
from tqdm import tqdm
import shutil

def process_file(file_path):
    # 获取文件所在目录的最后一级目录名
    name = os.path.basename(os.path.dirname(os.path.dirname(file_path)))

    # 读取文件内容
    with open(file_path, 'r', encoding='utf-8') as file:
        lines = file.readlines()
    
    # 处理每一行
    processed_lines = []
    for line in lines:
        # 按,分割内容
        split_content = [x.strip() for x in line.split(',')]
        split_content.insert(0, name)
        # 去除重复内容
        unique_content = []
        for item in split_content:
            if item not in unique_content:
                unique_content.append(item)
        # 正则匹配结尾为hair/eyes/bangs/horn的内容并删除
        pattern = re.compile(r'(.*?)(hair|eyes|bangs|horns)$', re.IGNORECASE)
        filtered_content = [x for x in unique_content if not pattern.search(x)]
        # 组合成以", "分割的内容
        processed_line = ', '.join(filtered_content)
        processed_lines.append(processed_line)
    
    return processed_lines

def restore_bak_files(work_dir):
    # 遍历目录及其子目录中的所有文件
    for root, dirs, files in os.walk(work_dir):
        for filename in files:
            if filename.endswith('.bak'):
                bak_file_path = os.path.join(root, filename)
                # 从.bak文件名中恢复原始的.txt文件名
                txt_file_path = bak_file_path[:-4]  # 移除'.bak'后缀
                # 复制.bak文件并覆盖原有的修改后的文件
                try:
                    shutil.copy(bak_file_path, txt_file_path)
                except FileExistsError:
                    os.remove(txt_file_path)
                    shutil.copy(bak_file_path, txt_file_path)
                print(f"Restored: {txt_file_path}")


def main(work_dir):
    # 遍历目录及其子目录中的所有文件，并使用tqdm显示进度
    for root, dirs, files in os.walk(work_dir):
        for filename in tqdm(files, desc="Processing files"):
            if filename.endswith('.txt'):
                file_path = os.path.join(root, filename)
                processed_lines = process_file(file_path)
                
                # 重命名原文件为.bak文件
                bak_file_path = file_path + '.bak'
                try:
                    os.rename(file_path, bak_file_path)
                except FileExistsError:
                    pass
                # 创建新文件来保存处理后的内容
                with open(file_path, 'w', encoding='utf-8') as file:
                    file.writelines(processed_lines)



work_dir = 'path_to_your_directory'  # 请替换为您的目录路径
main(work_dir) #启动主程序

# 恢复备份
#restore_bak_files(work_dir)
